<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" xmlns:local="clr-namespace:IRISCalculator" xmlns:Themes="clr-namespace:Xceed.Wpf.Toolkit.Themes;assembly=Xceed.Wpf.Toolkit">
    <!--#region Окно -->
    <!--ResizeGrip-->
    <Style x:Key="ResizeGripStyle"
       TargetType="{x:Type ResizeGrip}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Height" Value="14" />
        <Setter Property="Width" Value="14" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ResizeGrip}">
                    <Polygon Fill="{StaticResource BorderDarkColor}" Stroke="{StaticResource BorderDarkColor}" StrokeThickness="1" Stretch="Fill" Points="0,4 4,0 4,4">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver"/>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Polygon>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Стиль главного окна-->
    <Style x:Key="GlobalWindow" TargetType="{x:Type Window}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="{StaticResource WindowBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderDarkColor}"/>
        <Setter Property="MinHeight" Value="650"/>
        <Setter Property="MinWidth" Value="650"/>
        <Setter Property="MaxHeight" Value="{DynamicResource {x:Static SystemParameters.MaximizedPrimaryScreenHeightKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="4" Margin="6">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <AdornerDecorator Grid.Row="1" Margin="-1">
                                <ContentPresenter/>
                            </AdornerDecorator>
                            <ResizeGrip x:Name="WindowResizeGrip" Style="{StaticResource ResizeGripStyle}" Visibility="Visible" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsTabStop="false" Margin="-1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--Стиль кнопок сворачивания, разворачивания и закрытия окна-->
    <Style x:Key="MaxMiniButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource BackgroundLightColor}"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackgroundLightColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource BackgroundDarkColor}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentBorder" Background="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Stretch="Uniform"/>
                            </Border.OpacityMask>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource BackgroundLightColor}"/>
        <Setter Property="Width" Value="20"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="3"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="2">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="Background">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource CloseButtonBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed"/>
                                <VisualState x:Name="Disabled"/>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentBorder" Background="{TemplateBinding Foreground}" Margin="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" Stretch="Uniform"/>
                            </Border.OpacityMask>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    <!--#region Фрейм-->
    <Style TargetType="{x:Type Frame}">
        <Setter Property="NavigationUIVisibility" Value="Hidden" />
    </Style>
    <!--#endregion-->
    <!--#region Панели-->
    <!--Стиль панели системных сообщений-->
    <Style TargetType="{x:Type Border}" x:Key="MessagePanel">
        <Setter Property="Margin" Value="0,10,0,0"/>
        <Setter Property="Width" Value="500"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="CornerRadius" Value="{StaticResource BorderCornerRadiusMax}"/>
        <Setter Property="BorderThickness" Value="{StaticResource BorderThickness}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderDarkColor}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundStandartColor}"/>
        <Setter Property="Panel.ZIndex" Value="100"/>
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="0" Y="-2500"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding MessageWorker.IsOpen, Source={StaticResource AppCore}}" Value="True">
                <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                            <DoubleAnimation From="-2500" To="0" Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <PowerEase/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                            <DoubleAnimation To="1500" Duration="0:0:0.4">
                                <DoubleAnimation.EasingFunction>
                                    <SineEase/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.ExitActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!--Стиль гравных панелей с плавной анимацией появления-->
    <Style TargetType="{x:Type Border}" x:Key="AnimatedPanel">
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="Margin" Value="0,5,5,5"/>
        <Setter Property="Grid.Row" Value="1"/>
        <Setter Property="Grid.Column" Value="1"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="CornerRadius" Value="{StaticResource BorderCornerRadiusMax}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundLightColor}"/>
        <Setter Property="Panel.ZIndex" Value="-5"/>
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="500" Y="-500"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="Opacity">
                            <DoubleAnimation From="0" To="1" Duration="0:0:1">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)">
                            <DoubleAnimation From="500" To="0" Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)">
                            <DoubleAnimation From="-500" To="0" Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Стиль панели пользователя с анимацией появления-->
    <Style TargetType="{x:Type Border}" x:Key="UserPanel">
        <Setter Property="Margin" Value="0,5,5,5"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="CornerRadius" Value="{StaticResource BorderCornerRadiusMax}"/>
        <Setter Property="Background" Value="{StaticResource BackgroundLightColor}"/>
        <Setter Property="RenderTransformOrigin" Value="0.5 0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform  ScaleY="0"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)">
                            <DoubleAnimation From="0" To="1" Duration="0:0:0.2">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase/>
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--Стиль GroupBox-->
    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush" Value="{StaticResource BorderDarkColor}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{StaticResource TextDarkColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{StaticResource BorderThickness}" Grid.ColumnSpan="4" CornerRadius="{StaticResource BorderCornerRadiusMax}" Grid.Row="1" Grid.RowSpan="3">
                            <Border.OpacityMask>
                                <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                    <Binding ElementName="Header" Path="ActualWidth"/>
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </Border.OpacityMask>
                        </Border>
                        <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                            <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
</ResourceDictionary>